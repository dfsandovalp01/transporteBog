
extensions [nw table]
;;;;;;;;;;;;;;;
;; FUNCTIONS ;;
;;;;;;;;;;;;;;;


to setup
  clear-all
  ask patch 2 30 [set pcolor red]
  
  setup-importer
  setup-importer-tm
  setup-portales
  setup-conectores
  

  
  set all_portales sort [id] of nodos with [tipo = "PORT"] ; [421 425 432 446 464 475 492 503 516]
  
  set prob_of_service read_table "distributions/prob.csv"
	set gm_org read_gm "distributions/org.csv"
	set gm_dest read_gm "distributions/dest.csv"
  
  setup-people
  move-people
; /home/dfsandovalp/WORK/transporteBog/version_1/distributions
  setuptrans

  set indice_rec [recorridos] of transmilenio
  
  correcciones

  reset-ticks
end


;;;;;;;;;;;;;;;;;;;;;;; GO ;;;;;;;;;;;;;;;;;;;;;;

to go
;  set indice_rec [recorridos] of transmilenio
;  move_middle
;  ask transmilenio [
    move-articulado
    return-articulado
    give-path
;  ]
  
;  if all_routes_ok = "OK" [setup_transmi_med]

  if length [who] of t_middle = 0  [state_tm] 
  
   
  

  tick
end

;=================== funciones =====================


to setup-portales
  ask nodos
  [if tipo = "PORT" 
    [set shape "house"
     set color green
     set label id
     set size 0.6]
  ]
end

to setup-conectores
  ask nodos
  [
    if tipo = "ORI" 
    [
      set shape "circle"
      set color yellow
      set label id
      set size 0.4
    ]    
  ]

end

to state_tm 
  
    ifelse [recorridos] of min-one-of (transmilenio) [recorridos] > 0
    [      
      set all_routes_ok "OK"
      setup_transmi_med
      ask patch 2 30 [ set pcolor green ]
    ]
    []
  
end

;to paint_tm
;  
;end

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; APLICANDO DISTRIBUCION GAUSIANA ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


; ------- read distribution from csv -------
to-report read_table [file]
	let prob []
	let counter 0

	file-close-all
	file-open file
	let data csv:from-row file-read-line

	while [not file-at-end?][
		let row csv:from-row file-read-line
		repeat item 0 row - counter + 1 [
			let entry []
			set entry lput counter entry
			set entry lput item 1 row entry
			set prob lput entry prob
			set counter counter + 1
		]
	]

	file-close
	report prob
end

to-report read_gm [file]
	; create list
	let gm []

	file-close-all
	;file-open "distributions/org.csv"
	file-open file
	let data csv:from-row file-read-line
	let hour -1
	let hour_old 100
	let gm_hour []
  set horas_pico []

	while [not file-at-end?][
		let row csv:from-row file-read-line
		set hour item 1 row    
    set horas_pico remove-duplicates lput hour horas_pico

		if hour > hour_old [
			set gm lput gm_hour gm
			set gm_hour []
		]

		set gm_hour lput row gm_hour
		set hour_old hour
	]
	set gm lput gm_hour gm

	file-close
	report gm
end
; -----------------------------------------

; ------- span from gaussian mixture distribution --------

to-report place_from_gaussian_mixture [ m n threshold dists ]
	ifelse item 1 item 0 item m dists < floor time [
		; recursive
		set m m + 1
		report place_from_gaussian_mixture m n threshold dists
	][
		if threshold = -1 [
			set threshold random-float 1
		]
		ifelse item 5 item n item m dists >= threshold [
			let mean_x item 2 item n item m dists
			let mean_y item 3 item n item m dists
			let std item 4 item n item m dists
			report place_with_mean_and_std mean_x mean_y std
		][
			set n n + 1
			report place_from_gaussian_mixture m n threshold dists
		]
	]
end

to-report place_with_mean_and_std [ mean_x mean_y std ]
	let xcord random-normal mean_x std
	let ycord random-normal mean_y std

	if xcord > max-x [set xcord max-x]
	if ycord > max-y [set ycord max-y]
	if xcord < 0 [set xcord 0]
	if ycord < 0 [set ycord 0]

	let nodo-to-move min-one-of (nodos) [ distancexy xcord ycord ]

	; old code back where this function spaned the agent
	;set xcor xcord
	;set ycor ycord

	report nodo-to-move

end

to span_from_gaussian_mixture [ m n threshold dists ]
	let nodo-to-move place_from_gaussian_mixture 0 0 -1 dists
	set current_nodo nodo-to-move
	move-to nodo-to-move
end
; -----------------------------------------------------------



; ===== CORRECCIONES =========

to correcciones
  ;ask vertex 102 [create-edge_tm-with vertex 103]
  ask edges_tm with [capacity = 4] [
    set color sky
  ]
end
